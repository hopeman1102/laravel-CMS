<?php

use WebEd\Base\ModulesManagement\Repositories\CoreModulesRepository;
use WebEd\Base\ModulesManagement\Repositories\Contracts\CoreModulesRepositoryContract;

class CmsInstallTest extends Tests\TestCase
{
    /**
     * @var \WebEd\Base\ACL\Repositories\RoleRepository
     */
    protected $roleRepository;

    /**
     * @var \WebEd\Base\Users\Repositories\UserRepository
     */
    protected $userRepository;

    /**
     * @var CoreModulesRepository
     */
    protected $coreModuleRepository;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->roleRepository = app(\WebEd\Base\ACL\Repositories\Contracts\RoleRepositoryContract::class);
        $this->userRepository = app(\WebEd\Base\Users\Repositories\Contracts\UserRepositoryContract::class);
        $this->coreModuleRepository = app(CoreModulesRepositoryContract::class);
    }

    /**
     * Works like php artisan cms:install
     *
     * @return void
     */
    public function testCmsInstall()
    {
        try {
            \Artisan::call('migrate:refresh');
            \Artisan::call('cache:clear');
            $this->createSuperAdminRole();
            $this->createAdminUser();
            $this->registerInstallModuleService();

            $this->assertTrue(true);
        } catch (\Exception $exception) {
            $this->assertTrue(false, $exception->getMessage());
        }
    }

    protected function createSuperAdminRole()
    {
        $role = new \WebEd\Base\ACL\Models\Role();
        $role->name = 'Super Admin';
        $role->slug = 'super-admin';
        $this->roleRepository->create([
            'name' => 'Super Admin',
            'slug' => str_slug('Super Admin'),
        ]);
    }

    protected function createAdminUser()
    {
        $this->userRepository->create([
            'username' => 'admin',
            'email' => 'admin@webed.com',
            'password' => 'test',
            'display_name' => 'Super Admin',
            'first_name' => 'Tedozi',
            'last_name' => 'Manson',
        ]);
    }

    protected function registerInstallModuleService()
    {
        $modules = get_core_module();

        $core = $modules->where('alias', '=', 'webed-core')->first();

        $coreNamespace = str_replace('\\\\', '\\', array_get($core, 'namespace', '') . '\Providers\InstallModuleServiceProvider');

        $this->app->register($coreNamespace);

        $data = [
            'alias' => 'webed-core',
            'installed_version' => get_cms_version(),
        ];
        $this->coreModuleRepository->create($data);

        $modules = get_core_module()->where('namespace', '!=', 'WebEd\Base');

        foreach ($modules as $module) {
            $namespace = str_replace('\\\\', '\\', array_get($module, 'namespace', '') . '\Providers\InstallModuleServiceProvider');
            if (class_exists($namespace)) {
                $this->app->register($namespace);
            }
        }
        /*\Artisan::call('vendor:publish', [
            '--tag' => 'webed-public-assets',
            '--force' => true,
        ]);*/
    }
}
